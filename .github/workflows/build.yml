# This is a basic workflow to help you get started with Actions
name: 'Tauri Build'

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    strategy:
      matrix:
        node-version: [18]
        platform: [macos-latest, ubuntu-latest, windows-latest]

    # The type of runner that the job will run on
    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v2

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm`
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: install rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal

    - name: install dependencies (ubuntu only)
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libappindicator3-dev librsvg2-dev patchelf libsoup-3.0 libwebkit2gtk-4.1-dev

    - name: Install Dependencies
      run: npm i && npm i -D cli-truncate

    - name: Check lint
      run: npm run lint

    - name: Run headless unit test
      if: matrix.platform == 'ubuntu-latest'
      uses: GabrielBB/xvfb-action@v1
      with:
        run: npm run test

    - name: build tauri app
      uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
